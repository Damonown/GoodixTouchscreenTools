apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def getReleaseVersionCode() {

    def versionPropsFile = file('version.properties')
    def version = 1

    Properties versionProps = new Properties()

    def runTasks = gradle.startParameter.taskNames
    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
        version = versionProps['VERSION_CODE'].toInteger()
    }
    if (':app:assembleRelease' in runTasks) {
        version = version + 1
        versionProps['VERSION_CODE'] = version.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
    return version
}

android {
    def code = getReleaseVersionCode()

    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "ru.vpro.android.gttools.gtreapirtool"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode code
        versionName "1.0." + code
        setProperty("archivesBaseName", "gt_repair_tool_" + versionName)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.0.2'
    implementation 'com.android.support:support-v4:26.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}
